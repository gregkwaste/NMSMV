using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using Newtonsoft;
using Newtonsoft.Json;
using OpenTK.Graphics.OpenGL4;
using System.Drawing;
using Newtonsoft.Json.Linq;
using OpenTK.Audio.OpenAL;
using OpenTK;
using MVCore.GMDL;
using MVCore.GMDL.Primitives;
using libMBIN.NMS.Toolkit;
using Microsoft.SqlServer.Server;
using System.Linq;

namespace MVCore.Text
{
    
    
    public class FontManager
    {
        public Dictionary<string, Font> fonts = new Dictionary<string, Font>();
        
        public FontManager()
        {
            
        }

        public void addFont(Font f)
        {
            if (fonts.ContainsKey(f.Name))
                fonts[f.Name].Dispose();
            fonts[f.Name] = f;
        }
            

        public void addFont(string fontPath)
        {
            if (!fontPath.EndsWith(".fnt"))
                return;

            //Files Are expected to be json files as generated by
            //https://evanw.github.io/font-texture-generator/

            Font f = new Font(fontPath, 1);
            fonts[f.Name] = f;
        }

        public Font getFont(string fontName)
        {
            if (!fonts.ContainsKey(fontName))
            {
                Common.CallBacks.Log("FontManager does not contain font");
                return null;
            }

            return fonts[fontName];
        }

        public void cleanup()
        {
            foreach (Font f in fonts.Values)
                f.Dispose();
            fonts.Clear();
        }

    }

    
}
